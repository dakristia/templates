{
  "$schema": "http://json.schemastore.org/template",
  "author": "Intility",
  "classifications": ["Intility", "Web", "WebAPI"],
  "name": "Intility Api",
  "description": "A solution template for creating Intility APIs.",
  "identity": "Intility.Templates.ApiSolution.CSharp",
  "shortName": "iwebapi",
  "icon": "icon.png",
  "tags": {
    "language": "C#",
    "type": "solution",
    "vs_showParametersByDefault": "true",
    "vs_parametersToHide": "UserSecretsId"
  },
  "sourceName": "Company.WebApplication1",
  "preferNameDirectory": true,
  "guids": [
    "0E62310C-D76A-4681-9926-B1BFFDC379FC",
    "6B4D25B3-1CA5-49A7-BD85-EDC0FFF3AC14",
    "53bc9b9d-9d6a-45d4-8429-2a2761773502"
  ],
  "sources": [
    {
      "modifiers": [
        {
          "condition": "(windir == 'C:\\Windows')",
          "exclude": ["Company.WebApplication1/Properties/launchSettings.json"]
        },
        {
          "condition": "(projectOnly)",
          "exclude": [
            "Company.WebApplication1.sln",
            "Company.WebApplication1.Tests/**",
            ".release-please-manifest.json",
            "release-please-config.json",
            ".github/**",
            "argo/**",
            "k8s/**",
            ".editorconfig",
            ".gitattributes",
            ".gitignore",
            "README.md"
          ],
          "rename": {
            "Company.WebApplication1/": "./"
          }
        }
      ]
    }
  ],
  "symbols": {
    "Framework": {
      "type": "parameter",
      "description": "The target framework version for the project.",
      "datatype": "choice",
      "choices": [
        {
          "choice": "net9.0",
          "description": "Target .NET 9"
        }
      ],
      "replaces": "net9.0",
      "defaultValue": "net9.0"
    },
    "ContainerRepository": {
      "type": "derived",
      "valueSource": "name",
      "valueTransform": "kebabCase",
      "replaces": "ContainerRepositoryPlaceholder",
      "description": "The container repository name, derived from project name and made safe for container registry."
    },
    "HostIdentifier": {
      "type": "bind",
      "binding": "HostIdentifier"
    },
    "AADInstance": {
      "type": "parameter",
      "datatype": "string",
      "forms": {
        "global": ["url"]
      },
      "defaultValue": "https://login.microsoftonline.com/",
      "replaces": "https:////login.microsoftonline.com/",
      "description": "The Azure AD instance URL for authentication. Default is https://login.microsoftonline.com/"
    },
    "ClientId": {
      "type": "parameter",
      "datatype": "string",
      "forms": {
        "global": ["guid"]
      },
      "replaces": "11111111-1111-1111-11111111111111111",
      "description": "The Azure AD application (client) ID. Must be a valid GUID for the application registration."
    },
    "Domain": {
      "type": "parameter",
      "datatype": "string",
      "forms": {
        "global": ["domain"]
      },
      "replaces": "intility.onmicrosoft.com",
      "description": "The Azure AD domain name (e.g., intility.onmicrosoft.com) for the tenant."
    },
    "DefaultScope": {
      "type": "parameter",
      "datatype": "string",
      "replaces": "api-scope",
      "defaultValue": "user_impersonation",
      "description": "The default OAuth 2.0 scope to request during authentication. Default is 'user_impersonation'."
    },
    "TenantId": {
      "type": "parameter",
      "datatype": "string",
      "forms": {
        "global": ["guid"]
      },
      "replaces": "9b5ff18e-53c0-45a2-8bc2-9c0c8f60b2c6",
      "description": "The Azure AD directory (tenant) ID. Must be a valid GUID for your Azure AD tenant."
    },
    "SwaggerClientId": {
      "type": "parameter",
      "datatype": "string",
      "forms": {
        "global": ["guid"]
      },
      "replaces": "22222222-2222-2222-22222222222222222",
      "description": "The Azure AD application (client) ID for Swagger UI authentication. Must be a valid GUID."
    },
    "ArgoProject": {
      "type": "parameter",
      "datatype": "string",
      "defaultValue": "",
      "description": "Argo Project Name (e.g. AppServices)"
    },
    "OpenShiftNamespace": {
      "type": "parameter",
      "datatype": "string",
      "defaultValue": "",
      "description": "OpenShift Namespace (e.g. aa-appservices-dev)"
    },
    "GitHubRepoUrl": {
      "type": "parameter",
      "datatype": "string",
      "forms": {
        "global": ["url"]
      },
      "defaultValue": "",
      "description": "GitHub Repository URL (e.g. https://github.com/intility/appservices.git)"
    },
    "FormattedOpenShiftNamespace": {
      "type": "derived",
      "valueSource": "ContainerRepository",
      "valueTransform": "openShiftFormat"
    },
    "FormattedGitHubRepoUrl": {
      "type": "derived",
      "valueSource": "ContainerRepository",
      "valueTransform": "githubUrlFormat"
    },
    "ArgoProjectCoalesced": {
      "type": "generated",
      "generator": "coalesce",
      "parameters": {
        "sourceVariableName": "ArgoProject",
        "fallbackVariableName": "ContainerRepository"
      },
      "replaces": "ArgoProjectPlaceholder",
      "description": "Uses ArgoProject if provided, otherwise ContainerRepository"
    },
    "OpenShiftNamespaceCoalesced": {
      "type": "generated",
      "generator": "coalesce",
      "parameters": {
        "sourceVariableName": "OpenShiftNamespace",
        "fallbackVariableName": "FormattedOpenShiftNamespace"
      },
      "replaces": "OpenShiftNamespacePlaceholder",
      "description": "Uses OpenShiftNamespace if provided, otherwise generates from ContainerRepository"
    },
    "GitHubRepoUrlCoalesced": {
      "type": "generated",
      "generator": "coalesce",
      "parameters": {
        "sourceVariableName": "GitHubRepoUrl",
        "fallbackVariableName": "FormattedGitHubRepoUrl"
      },
      "replaces": "GitHubRepoUrlPlaceholder",
      "description": "Uses GitHubRepoUrl if provided, otherwise generates from ContainerRepository"
    },
    "UserSecretsId": {
      "type": "generated",
      "generator": "guid",
      "defaultFormat": "D",
      "replaces": "53bc9b9d-9d6a-45d4-8429-2a2761773502",
      "description": "The ID used for user secrets storage. Automatically generated as a unique GUID."
    },
    "skipRestore": {
      "type": "parameter",
      "datatype": "bool",
      "description": "Skips the automatic restore of NuGet packages after project creation.",
      "defaultValue": "false"
    },
    "projectOnly": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "false",
      "description": "Creates a standalone project without a solution file. Use this when adding to an existing solution."
    }
  },
  "forms": {
    "kebabCase": {
      "identifier": "kebabCase"
    },
    "openShiftFormat": {
      "identifier": "replace",
      "pattern": "^(.*)$",
      "replacement": "aa-$1-dev"
    },
    "githubUrlFormat": {
      "identifier": "replace",
      "pattern": "^(.*)$",
      "replacement": "https://github.com/intility/$1.git"
    }
  },
  "defaultName": "IntilityApi",
  "postActions": [
    {
      "condition": "(!skipRestore)",
      "description": "Restore NuGet packages required by this project.",
      "manualInstructions": [
        {
          "text": "Run 'dotnet restore'"
        }
      ],
      "actionId": "210D431B-A78B-4D2F-B762-4ED3E3EA9025",
      "continueOnError": true
    },
    {
      "description": "Add projects to solution",
      "manualInstructions": [
        { "text": "Add generated project to solution manually." }
      ],
      "actionId": "D396686C-DE0E-4DE6-906D-291CD29FC5DE",
      "continueOnError": true
    }
  ],
  "primaryOutputs": [
    {
      "condition": "(!projectOnly && HostIdentifier == 'dotnetcli')",
      "path": "Company.WebApplication1.sln"
    },
    {
      "condition": "(!projectOnly && HostIdentifier != 'dotnetcli')",
      "path": "Company.WebApplication1.generated.sln"
    },
    {
      "condition": "(projectOnly)",
      "path": "Company.WebApplication1.csproj"
    },
    {
      "condition": "(!projectOnly)",
      "path": "Company.WebApplication1.Tests/Company.WebApplication1.Tests.csproj"
    }
  ]
}
